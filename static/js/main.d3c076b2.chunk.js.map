{"version":3,"sources":["components/pad/Pad.js","components/Button/Button.js","App.js","reportWebVitals.js","index.js"],"names":["Pad","props","useState","on","setOn","className","style","backgroundColor","color","onClick","newState","onChange","name","url","isOn","button","clicked","children","pads","App","isRunning","setIsRunning","loops","setLoops","OnPadChange","i","length","audio","pause","useEffect","element","Audio","load","console","log","play","interval","setInterval","currentTime","clearInterval","map","item","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d3c076b2.chunk.js","sourcesContent":["import React, { useState } from'react';\nimport './Pad.css';\n \nfunction Pad(props){\n    const [on, setOn] = useState(false);\n\n    return(\n        <div >\n            <button \n                className={\"PadBox\"} \n                style={{backgroundColor: props.color}}\n                onClick={() => {\n                    const newState = !on\n                    setOn(newState)\n                    props.onChange({\n                        name: props.name,\n                        url: props.url,\n                        isOn: newState,\n                    })\n                }} \n                >\n                    {props.name} {on ? '(on)': ''}\n            </button>\n        </div>\n    );   \n}\nexport default Pad;","import React from 'react';\nimport './Button.css';\n\nconst button = (props) => (\n    <div>\n        <button className={\"Button\"} onClick={props.clicked} >\n            {props.children}\n        </button>\n    </div>\n);\n\nexport default button;","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Pad from './components/pad/Pad.js';\nimport Button from './components/Button/Button';\n\n\nconst pads  = [\n  {\n      \"name\": \"future funk beats\",\n      \"color\": \"red\", \n      \"url\": \"padsLinks/120_future_funk_beats_25.mp3\"\n  },\n  {\n      \"name\": \"stutter breakbeats\",\n      \"color\": \"green\", \n      \"url\": \"padsLinks/120_stutter_breakbeats_16.mp3\"\n  },\n  {\n      \"name\": \"Bass Warwick heavy funk groove \",\n      \"color\": \"yellow\", \n      \"url\": \"padsLinks/Bass Warwick heavy funk groove on E 120 BPM.mp3\"\n  },\n  {\n      \"name\": \"electric guitar coutry slide\",\n      \"color\": \"blue\", \n      \"url\": \"padsLinks/electric guitar coutry slide 120bpm - B.mp3\"\n  },\n  {\n      \"name\": \"StompySlosh\",\n      \"color\": \"grey\", \n      \"url\": \"padsLinks/FUD_120_StompySlosh.mp3\"\n  },\n  {\n      \"name\": \"GrooveB\",\n      \"color\": \"white\", \n      \"url\": \"padsLinks/GrooveB_120bpm_Tanggu.mp3\"\n  },\n  {\n      \"name\": \"MazePolitics\",\n      \"color\": \"purple\", \n      \"url\": \"padsLinks/MazePolitics_120_Perc.mp3\"\n  },\n  {\n      \"name\": \"PAS3GROOVE\",\n      \"color\": \"pink\", \n      \"url\": \"padsLinks/PAS3GROOVE1.03B.mp3\"\n  },\n  {\n      \"name\": \"SilentStar\",\n      \"color\": \"brown\", \n      \"url\": \"padsLinks/SilentStar_120_Em_OrganSynth.mp3\"\n  }\n];\n\nfunction App() {\n  const [isRunning, setIsRunning] = useState(false);\n  const [loops, setLoops] = useState([]);\n   \n  \n  const OnPadChange = ({ name, isOn }) => {\n    for (let i = 0; i < loops.length; i++) {\n      if(loops[i].name === name){\n        loops[i].isOn = isOn;\n        if(!isOn){\n          loops[i].audio.pause();\n        }\n      }\n    }\n    setLoops(loops);\n  }\n\n  useEffect(() => {\n    for (let i = 0; i < pads.length; i++) {\n      const element = pads[i];\n      element.audio = new Audio(element.url);\n      element.audio.load();\n    }\n    setLoops(pads);console.log(pads);\n  }, []);\n\n  // play all pads that select\n  useEffect(() => {\n    if(!isRunning){\n      for (const i in loops) {\n        if(loops[i].isOn){\n          loops[i].audio.pause();\n        }\n      }\n      return;\n    }\n    for (let i = 0; i < loops.length; i++) {\n      const element = loops[i];\n      if(element.isOn){\n        element.audio.play()\n      }\n    }\n    const interval = setInterval(() => {\n      for (let i = 0; i < loops.length; i++) {\n        const element = loops[i];\n        if(element.isOn){\n          element.audio.pause()\n          element.audio.currentTime = 0;\n          element.audio.play()\n        }\n      }\n    }, 8000);\n    return () => {\n      clearInterval(interval)\n    };\n  }, [isRunning, loops])\n\n\n  return (\n    <div className=\"App\">\n      <h1 className={\"Title\"}>LOOP MACHINE</h1>\n      <Button clicked={() => setIsRunning(true)}>PLAY</Button><Button clicked={() => setIsRunning(false)}>STOP</Button>\n      <div className={\"PsdsDisplay\"}>\n        {loops.map(item => (\n              <Pad \n                  key={item.name} \n                  name={item.name} \n                  color={item.color}\n                  url={item.url}\n                  onChange={OnPadChange}\n              />\n          ))} \n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}